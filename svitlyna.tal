|00 @System [ &vector $2 &expansion $2 &wst $1 &rst $1 &metadata $2 &r $2 &g $2 &b $2 &debug $1 &state $1 ]
|10 @Console [ &vector $2 &read $1 &pad $4 &type $1 &write $1 &error $1 ]
|20 @Screen [ &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]

|70 
@width $2 @height $2 @x $2 @y $2

|a0 @File [ &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2 ]

|0100
	#beef print-short
	#0a .Console/write DEO

	( if we exit prematurely, status code will be failure )
	#01 .System/state DEO
	;filename .File/name DEO2
	( #0001 .File/length DEO2 )
	#00ff .File/length DEO2
	;buffer .File/read DEO2
	
	next-file-byte
	DUP .Console/write DEO
	LIT "f EQU ?{ !bad-file }

	#0000
@verify-farbfeld-magic
	INC2k SWP2 ;farbfeld-magic ADD2 LDA DUP ?{ !ff-size }
	next-file-byte 
	DUP .Console/write DEO
	EQU ?{ !bad-file }
	!verify-farbfeld-magic

@ff-size
	( discard high bytes, support max 65536x65536 )
	next-file-byte ;too-large JCN
	next-file-byte ;too-large JCN
	next-file-byte next-file-byte .width STZ2
	next-file-byte ;too-large JCN
	next-file-byte ;too-large JCN
	next-file-byte next-file-byte .height STZ2

	.width LDZ2 print-short
	#0a .Console/write DEO
	.height LDZ2 print-short
	#0a .Console/write DEO
	!end
( @quant1
	.x LDZ2 INC2
	DUP2 .width LDZ2 NEQ2 ?{ POP2 #00 .y LDZ2 INC2 .height LDZ2 EQU2 ;end JCN2 }
	.x STZ2
	next-rgb
	DUP ,minb1 LDR GTH ?{ DUP ,minb1 STR }
	DUP ,maxb1 LDR LTH ?{ DUP ,maxb1 STR } POP

	DUP ,ming1 LDR GTH ?{ DUP ,ming1 STR }
	DUP ,maxg1 LDR LTH ?{ DUP ,maxg1 STR } POP

	DUP ,minr1 LDR GTH ?{ DUP ,minr1 STR }
	DUP ,maxr1 LDR LTH ?{ DUP ,maxr1 STR } POP
	!quant1

	( used for median cut color quantization )
	@minr1 #ff @maxr1 #00 
	@ming1 #ff @maxg1 #00 
	@minb1 #ff @maxb1 #00
	@minr2 #ff @maxr2 #00 
	@ming2 #ff @maxg2 #00
	@minb2 #ff @maxb2 #00
	@mid $2 @midchan $1 )

@end
	( success! )
	#80 .System/state DEO
	BRK


@next-rgb ( -- r g b )
	( ignore lower 8 bits of precision )
	next-file-byte next-file-byte POP2
	next-file-byte next-file-byte POP2
	next-file-byte next-file-byte POP2
	( ignore 16-bit alpha )
	next-file-byte POP2 next-file-byte POP2
	JMP2r


( this works fine, but is probably over-complicated )
@next-file-byte ( -- x* )
	LIT2 [ &pointer =buffer ] 
	INC2k DUP2
	;buffer/end NEQ2 ?{ ;buffer .File/read DEO2 POP2 ;buffer }
	,&pointer STR2
	LDA
	JMP2r
( @ next-file-byte ( -- x* )
	;&pointer .File/read DEO2
	LIT [ &pointer 00 ]
	JMP2r )
	

@farbfeld-magic "arbfeld 00
@filename "hmm-s.ff 00

( https://wiki.xxiivv.com/site/uxntal_library.html )
@print-short ( short* -- )
	SWP print-short/b
	&b ( -- )
		DUP #04 SFT print-short/c
	&c ( -- )
		#0f AND DUP #09 GTH #27 MUL ADD [ LIT "0 ] ADD .Console/write DEO
		JMP2r

@print-str ( str* -- )
	&while ( -- )
		LDAk .Console/write DEO
		INC2 LDAk ?&while
	POP2 JMP2r
	

@bad-file 
	;&str !fail
	&str "...Wrong 20 "file 00

@too-large
	;&str !fail
	&str "...Too 20 "large 00

@fail ( error-msg* -- )
	print-str
	BRK
	
@buffer $0100 &end
